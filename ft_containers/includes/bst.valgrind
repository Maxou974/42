==43920== Memcheck, a memory error detector
==43920== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==43920== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==43920== Command: ./a.out
==43920== Parent PID: 42793
==43920== 
==43920== 
==43920== Process terminating with default action of signal 2 (SIGINT)
==43920==    at 0x4BCAA35: write (write.c:26)
==43920==    by 0x4B40F6C: _IO_file_write@@GLIBC_2.2.5 (fileops.c:1180)
==43920==    by 0x4B42A60: new_do_write (fileops.c:448)
==43920==    by 0x4B42A60: _IO_new_do_write (fileops.c:425)
==43920==    by 0x4B42A60: _IO_do_write@@GLIBC_2.2.5 (fileops.c:422)
==43920==    by 0x4B41754: _IO_new_file_xsputn (fileops.c:1243)
==43920==    by 0x4B41754: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1196)
==43920==    by 0x4B36056: fwrite (iofwrite.c:39)
==43920==    by 0x49A8B34: std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==43920==    by 0x49A8E8A: std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==43920==    by 0x10A03F: ft::bst<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<int> >::s(ft::nodee<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, int) const (in /home/maxime/Projects/42/ft_containers/includes/a.out)
==43920==    by 0x109F52: ft::bst<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<int> >::s(ft::nodee<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, int) const (in /home/maxime/Projects/42/ft_containers/includes/a.out)
==43920==    by 0x109F52: ft::bst<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<int> >::s(ft::nodee<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, int) const (in /home/maxime/Projects/42/ft_containers/includes/a.out)
==43920==    by 0x10A0A2: ft::bst<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<int> >::s(ft::nodee<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, int) const (in /home/maxime/Projects/42/ft_containers/includes/a.out)
==43920==    by 0x109F52: ft::bst<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<int> >::s(ft::nodee<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, int) const (in /home/maxime/Projects/42/ft_containers/includes/a.out)
==43920== 
==43920== HEAP SUMMARY:
==43920==     in use at exit: 6,476,800 bytes in 100,002 blocks
==43920==   total heap usage: 100,002 allocs, 0 frees, 6,476,800 bytes allocated
==43920== 
==43920== LEAK SUMMARY:
==43920==    definitely lost: 0 bytes in 0 blocks
==43920==    indirectly lost: 0 bytes in 0 blocks
==43920==      possibly lost: 0 bytes in 0 blocks
==43920==    still reachable: 6,476,800 bytes in 100,002 blocks
==43920==         suppressed: 0 bytes in 0 blocks
==43920== Rerun with --leak-check=full to see details of leaked memory
==43920== 
==43920== For lists of detected and suppressed errors, rerun with: -s
==43920== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
